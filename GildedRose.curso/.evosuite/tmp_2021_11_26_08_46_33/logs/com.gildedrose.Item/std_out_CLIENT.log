* Starting client
* Connecting to master process on port 7691
* Analyzing classpath: 
  - D:\Cursos\Java\Testing\CleanCode\GildedRose.curso\target\test-classes
  - D:\Cursos\Java\Testing\CleanCode\GildedRose.curso\target\classes
  - D:\Trabajo\Java\apache-maven-3.6.0\.m2\org\junit\jupiter\junit-jupiter-api\5.7.0\junit-jupiter-api-5.7.0.jar
  - D:\Trabajo\Java\apache-maven-3.6.0\.m2\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar
  - D:\Trabajo\Java\apache-maven-3.6.0\.m2\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar
  - D:\Trabajo\Java\apache-maven-3.6.0\.m2\org\junit\platform\junit-platform-commons\1.7.0\junit-platform-commons-1.7.0.jar
  - D:\Trabajo\Java\apache-maven-3.6.0\.m2\org\junit\jupiter\junit-jupiter-engine\5.7.0\junit-jupiter-engine-5.7.0.jar
  - D:\Trabajo\Java\apache-maven-3.6.0\.m2\org\junit\platform\junit-platform-engine\1.7.0\junit-platform-engine-1.7.0.jar
  - D:\Trabajo\Java\apache-maven-3.6.0\.m2\org\junit\jupiter\junit-jupiter-params\5.7.0\junit-jupiter-params-5.7.0.jar
* Finished analyzing classpath
* Generating tests for class com.gildedrose.Item
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
[MASTER] 08:46:43.956 [pool-2-thread-1] WARN  TestSuiteSerialization - Cannot load tests because file does not exist: D:\Cursos\Java\Testing\CleanCode\GildedRose.curso\.evosuite\evosuite-seeds\com.gildedrose.Item.seed
* Loaded 0 tests from D:\Cursos\Java\Testing\CleanCode\GildedRose.curso\.evosuite\evosuite-seeds\com.gildedrose.Item.seed
* Total number of test goals: 
  - Line 20
  - Branch 9
  - Exception 0
  - MutationFactory 38
  - Output 12
  - Method 8
  - MethodNoException 8
  - CBranchFitnessFactory 9
* Using seed 1637912798410
* Starting evolution
* Search finished after 47s and 1093 generations, 359578 statements, best individual has fitness: 2.5
* Writing sequences to pool
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 1
* Number of covered goals: 1
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 83%
* Total number of goals: 12
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Generated 12 tests with total length 28
* Resulting test suite's coverage: 98% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 92%
* Compiling and checking tests
* Writing JUnit test case 'Item_ESTest' to D:\Cursos\Java\Testing\CleanCode\GildedRose.curso\.evosuite\tmp_2021_11_26_08_46_33\tests
* Done!

